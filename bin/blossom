#!/usr/bin/env ruby

BLOSSOM_HOME = File.join(File.dirname(__FILE__), "..")

require "fileutils"
require "#{BLOSSOM_HOME}/lib/blossom"

include FileUtils

def make_file(name, content)
  File.open(name, "w") { |file| file.write(content) }
end

def copy_file(name, destination)
  FileUtils.cp "#{BLOSSOM_HOME}/#{name}", "#{destination}/#{name}"
end

def usage
  "Usage: #$0 PROJECT-NAME"
end

def die(message)
  error message
  exit 1
end

def error(message)
  warn "Blossom: Error: #{message}"
end

def run(command)
  puts "$ #{command}"
  system command or die "Command failed: #{command}"
end

if ARGV.empty?
  puts usage
elsif ARGV[0].start_with? "-"
  case ARGV[0]
  when "--version", "-v"
    puts Blossom::VERSION
  when "--help", "-h", "-?"
    puts usage
  else
    error "Unrecognized option: #{ARGV[0]}"
    warn usage
    exit 1
  end
else
  name = ARGV.first
  name_symbol = name =~ /\W|^\d/ ? ":'#{name}'" : ":#{name}"
  name_pretty = name.capitalize.gsub(/[-_]/, " ")

  if File.exist? name
    die "File already exists: #{name}"
  else
    puts "Blossom creating project: #{name}"

    puts "$ mkdir #{name}; cd #{name}"
    mkdir name; cd name

    puts "Installing Blossom boilerplate."

    make_file "#{name}.blossom", <<"^D"
## This is the Blossom configuration file.
##
## All settings are listed here with their default values.
## To change a setting, you have to uncomment the line first.

## The directory in which to put arbitrary public files:
# Public-Directory: public

## Files with these extensions are always public:
# Public-Extensions: js css html png jpg

## The maximum amount of time browsers may cache the site:
# Max-Cache-Time: 1 day

## Whether or not to remove the "www." part of the domain:
# Remove-WWW-From-Domain: yes
^D

    make_file ".gitignore", "tmp\n"

    make_file "config.ru", <<"^D"
require "rubygems"
require "bundler/setup"
require "blossom"

run Blossom __FILE__
^D

    make_file "Gemfile", <<"^D"
source :rubygems

gem "blossom", "~> #{Blossom::VERSION}"

# Uncomment the following if you want to use CoffeeScript.
# (See further instructions in #{name}.js.)
#
# gem "rack-coffee"
^D

    mkdir "public"

    copy_file "nwmatcher-1.2.4-min.js", "public"
    copy_file "selectivizr-1.0.2-min.js", "public"

    make_file "head-boilerplate.haml", <<"^D"
%link(rel="stylesheet" href="#{name}.css")
/[if lt IE 9]
  %script(src="//html5shiv.googlecode.com/svn/trunk/html5.js")
  %script(src="nwmatcher-1.2.4-min.js")
  %script(src="selectivizr-1.0.2-min.js")
%script(src="//ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.min.js")
%script(src="#{name}.js")
^D

    make_file "#{name}.haml", <<"^D"
!!!
%html
  %head
    %meta(charset="utf-8")
    %title [insert title here]
    %meta(name="description" content="[insert description here]")
    = haml :"head-boilerplate"
  %body
    %h1 <tt>#{name}.haml</tt>
    %p
      I threw in jQuery 1.6.4 for you.  Old versions of IE will also
      get <a href="http://code.google.com/p/html5shiv/">html5shiv</a>,
      <a href="http://javascript.nwbox.com/NWMatcher/">NWMatcher</a> and
      <a href="http://selectivizr.com">Selectivizr</a>, so you can
      use HTML5 elements and CSS3 selectors.
    %p
      Note: If you want to rename this file, you must also rename
      <tt>#{name}.blossom</tt> and <tt>#{name}.sinatra.rb</tt>.
^D

    make_file "#{name}.sass", <<"^D"
@import compass/reset
@import compass/utilities
@import compass/css3

body
  font: 24px/1.5 Helvetica, sans-serif
  width: 600px
  margin: auto

h1
  font-size: 200%
  margin: 1em 0 .5em

p
  margin: 1em 0

tt
  font-family: monospace
^D

    make_file "#{name}.sinatra.rb", <<"^D"
# Put any custom Sinatra routes or configuration here.
# See <http://www.sinatrarb.com/documentation> for help.

# This is also where you insert middleware (just remember to add
# any new dependencies to your Gemfile and to run \`bundle\'):
#
# require "some/middleware"
# use Some::Middleware

# get "/hello" do
#   "Hello World"
# end
^D

    make_file "#{name}.js", <<"^D"
// If you do not want to use CoffeeScript, you can delete this comment.
// If you do, first install the CoffeeScript compiler and Rack::Coffee:
//
//    $ npm install -g coffee-script
//    $ sudo gem install rack-coffee
//    $ echo 'gem "rack-coffee"' >> Gemfile
//    $ bundle
//
// Then simply delete this file and create #{name}.coffee instead.
^D

    run "bundle --local"
    run "git init"
    run "git add -A"
    run "git commit -m 'Create project.'"
    
    puts <<"^D"

Application created!  Now type \`cd #{name}\' and then \`rackup\'.
This will run your application at <http://localhost:9292/>.

Start hacking in \`#{name}.haml\' and \`#{name}.sass\'.  If you
create \`x.haml\', it will show up at <http://localhost:9292/x>.

Public files go in the \`public/\' directory, but you can put images
and Javascript files directly in the root directory if you want.
This (and other things) can be configured in \`#{name}.blossom\'.

  !! Warning: Old versions of Blossom used \`static/\', not \`public/\'.

Put any custom middleware or Sinatra code in \`#{name}.sinatra.rb\',
but remember to restart your application after changing this file.

If you restart your application a lot, there is a drop-in replacement
for rackup called Shotgun <https://github.com/rtomayko/shotgun>:

   $ sudo gem install shotgun
   $ shotgun # Like rackup, except with automatic reloading.

Good luck and have fun! :-)
^D
  end
end
